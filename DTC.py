# -*- coding: utf-8 -*-
"""Untitled41.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PiL866J7epzNtf3dlWxwxO9vuy0WMran
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

dataset=pd.read_csv('car_evaluation.csv')
dataset.columns =['buying', 'maint', 'doors', 'persons', 'lug_boot', 'safety', 'class']
dataset['doors']=dataset['doors'].replace(['5more'],5)
dataset['persons']=dataset['persons'].replace(['more'],5)
df=dataset.dropna(how='any')
df

X=df.iloc[:,:-1].values
y=df.iloc[:,-1].values

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
X[:,0]=le.fit_transform(X[:,0])
X[:,1]=le.fit_transform(X[:,1])
X[:,4]=le.fit_transform(X[:,4])
X[:,5]=le.fit_transform(X[:,5])
y=le.fit_transform(y)

y=y.reshape(len(y),1)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.25,random_state=0)

from sklearn.tree import DecisionTreeClassifier
DTC=DecisionTreeClassifier(criterion='entropy',random_state=0)
DTC.fit(X_train,y_train)

y_pred = DTC.predict(X_test)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)
print(accuracy_score(y_test, y_pred)*100)